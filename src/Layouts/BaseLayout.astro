---
import '@fontsource-variable/mulish'

import Navbar from '@components/Navbar.astro'
import DarkModeToggle from '@components/atoms/DarkModeToggle.astro'
import Seo from '@components/Seo.astro'
import Footer from '@components/Footer.astro'

const {
	title,
	description,
	keywords = 'web developer, full stack developer, magento developer, php developer, magento 1.9',
	author = 'Matteo "Maio" Barbero',
	canonical,
	type = 'website',
} = Astro.props
---

<!DOCTYPE html>
<script is:inline>
	if (localStorage.getItem('darkMode') === 'dark') {
		document.querySelector('html').dataset.theme = 'dark'
	}
	if (localStorage.getItem('darkMode') === 'light') {
		document.querySelector('html').dataset.theme = 'light'
	}
	if (!localStorage.getItem('darkMode')) {
		let theme = window.matchMedia('(prefers-color-scheme: dark)')
			? 'dark'
			: 'light'
		localStorage.setItem('darkMode', theme)
	}
</script>
<html
	lang='en'
	x-data="{darkMode: localStorage.getItem('darkMode'),burgerOpen: false}"
	x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
	x-bind:data-theme='darkMode'
>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width, initial-scale=1.0' />
		<Seo
			title={title}
			description={description}
			keywords={keywords}
			author={author}
			canonical={canonical}
			type={type}
		/>
	</head>
	<body
		class='antialiased text-slate-800 dark:text-slate-100 bg-gray-200 dark:bg-slate-900 min-h-screen transition-colors mx-4 md:mx-8 lg:mx-12 scroll-smooth max-w-screen'
		:class="{'!h-screen overflow-hidden':burgerOpen}"
	>
		<Navbar />
		<main>
			<slot />
		</main>
		<DarkModeToggle />
		<Footer />
		<script>
			import AOS from 'aos'
			import 'aos/dist/aos.css'
			AOS.init()
			// You can also pass an optional settings object
			// below listed default settings
			AOS.init({
				// Global settings:
				disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
				startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on
				initClassName: 'aos-init', // class applied after initialization
				animatedClassName: 'aos-animate', // class applied on animation
				useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
				disableMutationObserver: false, // disables automatic mutations' detections (advanced)
				debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
				throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)

				// Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
				offset: 120, // offset (in px) from the original trigger point
				delay: 0, // values from 0 to 3000, with step 50ms
				duration: 400, // values from 0 to 3000, with step 50ms
				easing: 'ease-in-sine', // default easing for AOS animations
				once: false, // whether animation should happen only once - while scrolling down
				mirror: false, // whether elements should animate out while scrolling past them
				anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation
			})
		</script>
	</body>
</html>
